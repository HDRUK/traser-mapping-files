(

$nullable_values := [""," ","\"","Not Applicable","Not Available",
                     "Not applicable",
                     "NOT AVAILABLE","NOT APPLICABLE",[null]];

$null_string := function($x){
  ($x in $nullable_values or $type($x) != "string" or $not($exists($x)) ) ? null : $x
};

$null_array := function($x){
  [$filter([$map($x, function($xx){$xx ~> $null_string})],function($xx){$xx != null})]
};

$safeSplit := function($x,$delim){
    $x ? $x ~> $split($delim) : []
};

$map_followUp := {
  "0 - 6 MONTHS"  : "0 - 6 months",
  "6 - 12 MONTHS" : "6 - 12 months",
  "1 - 10 YEARS"  : "1 - 10 years",
  "> 10 YEARS"    : "> 10 years",
  "UNKNOWN"       : "Unknown",
  "CONTINUOUS"    :  "Continuous",
  "OTHER"         : "Other"   
};

$map_deliveryLeadTime := {
  "LESS 1 WEEK"     : "Less than 1 week",
  "1-2 WEEKS"       : "1-2 weeks",
  "2-4 WEEKS"       : "2-4 weeks",
  "1-2 MONTHS"      : "1-2 months",
  "2-6 MONTHS"      : "2-6 months",
  "MORE 6 MONTHS"   : "More than 6 months",
  "VARIABLE"        : "Variable",
  "NO TIMELAG"      : "Not applicable",
  "NOT APPLICABLE"  : "Not applicable",
  "OTHER"           : "Other"
};

$map_accrualPeriodicity := {
  "STATIC"      : "Static",
  "IRREGULAR"   : "Irregular",
  "CONTINUOUS"  : "Continuous",
  "BIENNIAL"    : "Biennial",
  "ANNUAL"      : "Annual",
  "BIANNUAL"    : "Biannual",
  "QUARTERLY"   : "Quarterly",
  "BIMONTHLY"   : "Bimonthly",
  "MONTHLY"     : "Monthly",
  "BIWEEKLY"    : "Biweekly",
  "WEEKLY"      : "Weekly",
  "SEMIWEEKLY"  : "Twice a week",
  "DAILY"       : "Daily",
  "OTHER"       : "Other"
};

$fixObservedNode := function($obs){(
    $node := $lowercase($obs.observedNode) = "persons" ? "Persons" :
        $lowercase($obs.observedNode) = "events" ? "Events" :
        $lowercase($obs.observedNode) = "findings" ? "Findings" : null;
    $obs ~> |$| {
        "observedNode": $node
    }|
)};

$getDatasetLinkage := function() {
  (
    $datasetLinkage := {
      "isDerivedFrom": [$map($safeSplit(input.linkage.datasetLinkage.isDerivedFrom, ';,;'), function($v){{'title': $v}})],
      "isPartOf": [$map($safeSplit(input.linkage.datasetLinkage.isPartOf, ';,;'), function($v){{'title': $v}})],
      "isMemberOf": [$map($safeSplit(input.linkage.datasetLinkage.isMemberOf, ';,;'), function($v){{'title': $v}})],
      "linkedDatasets": [$map($safeSplit(input.linkage.datasetLinkage.linkedDatasets, ';,;'), function($v){{'title': $v}})]
    }
  )
};

$applyMap := function($x,$theMap){
  $type($x) = 'array' ? [$map($x, function($el){ $applyMap($el,$theMap)})] ~> $null_array : ($x ? $lookup($theMap,$x) ~> $null_string : null)
};   

input ~> |$| {
    "summary": summary ~> |$|{
        "inPipeline": null
    }|,
    "coverage": coverage ? coverage ~> |$|
        {
            "datasetCompleteness": $$.extra.datasetCompleteness ? $$.extra.datasetCompleteness : null,
            "followUp": followup ~> $applyMap($map_deliveryLeadTime) ~> $null_string
        }, ['followup','biologicalsamples','psychological','physical','anthropometric','lifestyle','socioeconomic','gender'] | : null,
    "provenance": provenance ? provenance ~> |$|
    {
        "origin": origin ~> |$|{
            "imageContrast": null
        }|,
        "temporal": temporal ~> |$|
            {
                "timeLag": timeLag ~> $applyMap($map_deliveryLeadTime) ~> $null_string,
                "accrualPeriodicity": accrualPeriodicity ~> $applyMap($map_accrualPeriodicity) ~> $null_string
            }|
    }| : null,
    "accessibility": accessibility ~> |$|
    {
        "access": access ~> |$|
        {
            "deliveryLeadTime": deliveryLeadTime ~> $applyMap($map_deliveryLeadTime) ~> $null_string
        }|
    }|,
    "linkage": linkage ? linkage ~> |$|{
        "publicationAboutDataset": null,
        "publicationUsingDataset": $$.input.access.usage.isReferencedBy,
        "datasetLinkage": $getDatasetLinkage()
    }| : null,
    "observations": observations ? $map(observations, $fixObservedNode)[] : null
}|
)
