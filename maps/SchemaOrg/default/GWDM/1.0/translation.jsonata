(
/* define my custom functions */

/* make sure to convert dates into ISO-8601 */
$to_iso8601 := function($x){
    $replace($x, /(\.\d{6})$/, 'Z')
};


$to_str := function($x){
    $type($x) = 'array' ? $join($x,",") : $x
};

/* Google recommendations: */
/* - https://developers.google.com/search/docs/appearance/structured-data/dataset#structured-data-type-definitions */

{
    "@context": "https://schema.org/",
    "@id": "https://hdruk.ac.uk",
    "@type": "Dataset",
    "identifier": input.summary.doiName, /*can be a list of URL or Text*/
    "version": "GDMv1",
    "url":"https://hdruk.ac.uk/"&input.required.gatewayId, /*should use url to link to the dataset on our gateway */
    "name": input.summary.title,
    /* according to google, alternateName could be an array */
    /* ... current schema definition doesnt allow it */
    "alternateName": input.summary.shortTitle,
    "description":input.summary.description, 
    "abstract":input.summary.abstract, 
    "citation":input.summary.doiName,
    "funder":{ /*duplicate of creator at the moment...*/
        "@type": "Organization", /*https://schema.org/Organization*/
        "legalName": input.accessibility.usage.resourceCreator,
        "name": input.accessibility.usage.resourceCreator
	/*sameAs: <url> */
    },
    "usageInfo":{
        "@type":"CreativeWork",
        "name":"usage",
        "accessibilitySummary":input.accessibility.usage.dataUseLimitation
    },
    "creator": {
        "@type": "Organization", 
        "legalName": input.accessibility.usage.resourceCreator,
        "name": input.accessibility.usage.resourceCreator,
        "email": input.summary.contactPoint
    },
    "maintainer": {
        "@type": "Organization", 
        "legalName": input.accessibility.access.dataController,
        "name": input.accessibility.access.dataController,
        "email": input.summary.contactPoint /*this needs to be improved */
    },
    "publisher": {
        "@type": "Organization", 
        "legalName": input.summary.publisher.publisherName,
        "name": input.summary.publisher.publisherName,
        "identifier":input.summary.publisher.publisherGatewayId
    },
    /* "hasPart":[{}], -- google recommend -- can be done via linakage?*/
    /* "isPartOf":[{}], -- google recommend */
    /* "sameAs":{} - google recommend */
    /* "variableMeasured":{} - google recommend */
    "spatialCoverage": input.provenance.origin.source,
    "temporalCoverage": input.provenance.temporal.startDate & '/' & (input.provenance.temporal.endDate ? input.provenance.temporal.endDate : '..') ,
    "isAccessibleForFree": input.accessibility.access.accessRequestCost = "Free" ? true : false,
    "dateCreated": $to_iso8601(input.required.issued),
    "distribution": {
        "@type":"DataDownload",
        "name": input.accessibility.access.accessService,
        "contentUrl": "https://somehwere.com"
    },
    "keywords": input.summary.keywords ~> $to_str,
    "license": input.accessibility.access.accessRights
    /* "measuredmentTechnique":{} - google recommend */

}
)
